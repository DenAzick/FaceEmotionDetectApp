<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        ZwD/gf8A/4H/AP+B/wD///8A
</value>
  </data>
</root>